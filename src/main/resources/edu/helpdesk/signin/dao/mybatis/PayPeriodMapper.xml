<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.helpdesk.signin.dao.mybatis.PayPeriodMapper">

	<resultMap id="PayPeriodEndMapper" type="edu.helpdesk.signin.model.PeriodEnd">
		<id     property="id"  column="PeriodEndId" />
		<result property="end" column="PeriodEnd" />
	</resultMap>

	<resultMap id="PayPeriodMapper" type="edu.helpdesk.signin.model.PayPeriod">
		<result property="startOfPeriod" column="Start" />
		<result property="endOfPeriod" column="End" />
	</resultMap>
	
	<sql id="selectPeriodEndFragment">
		SELECT PeriodEndId, PeriodEnd FROM PeriodEnd 
	</sql>
	
	<sql id="deletePeriodEndFragment">
		DELETE FROM PeriodEnd
	</sql>
	 
	
	<select id="getAllPayPeriodEnds" resultMap="PayPeriodEndMapper">
		<!-- public List<PeriodEnd> getAllPayPeriodEnds(); -->
		<include refid="selectPeriodEndFragment" />
	</select>
	
	<select id="getPayPeriodEnd" resultMap="PayPeriodEndMapper">
		<!-- public PeriodEnd getPayPeriodEnd(@Param("id") Integer id); -->
		<include refid="selectPeriodEndFragment" />
		WHERE PeriodEndId = #{id}
	</select>
	
	
	<select id="getEndsBetweenDates" resultMap="PayPeriodEndMapper">
		<!-- public List<PeriodEnd> getEndsBetweenDates(@Param("before") Date before,
			@Param("after") Date after); -->
			SET @before = #{before};
			SET @after = #{after};
			
			
			<include refid="selectPeriodEndFragment" />
			WHERE @before &lt;= PeriodEnd AND PeriodEnd &lt; @after
	</select>
	

	<select id="getPayPeriodForDate" resultMap="PayPeriodMapper">
		<!-- public PayPeriod getPayPeriodForDate(@Param("d")Date d); -->
		SET @date = #{d};
		SET @PeriodStart = (SELECT PeriodEnd from PeriodEnd WHERE PeriodEnd &lt; @date ORDER BY PeriodEnd DESC LIMIT 1);
		SET @PeriodEnd   = (SELECT PeriodEnd from PeriodEnd WHERE PeriodEnd &gt; @date ORDER BY PeriodEnd ASC  LIMIT 1);
		SELECT @PeriodStart AS Start, @PeriodEnd AS End;
	</select>
	
	<insert id="createPayPeriodEnds">
		<!-- public void createPayPeriodEnds(@Param("ends") List<Date> ends); -->
		
		INSERT INTO PeriodEnd (PeriodEnd) VALUES
		<foreach collection="ends" item="item" separator=",">(#{item})</foreach>;
	</insert>
	
	
	<delete id="deleteAllPayPeriodEnds">
		<!-- public void deleteAllPayPeriodEnds(); -->
		<include refid="deletePeriodEndFragment" />
	</delete>
	
	<delete id="deleteAllPayPeriodEnds">
		<!-- public void deletePayPeriodEnds(@Param("ids") List<Integer> ids); -->
		<include refid="deletePeriodEndFragment" />
		WHERE PeriodEndId IN (<foreach collection="ids" item="item" separator=",">#{item}</foreach>);
	</delete>
</mapper>